{"version":3,"sources":["Components/SearchBar.js","Components/NavBar.js","Components/Table.js","Components/Main.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","handleSearchChange","className","placeholder","onChange","e","NavBar","Table","props","scope","users","map","user","i","location","state","name","first","last","phone","email","Main","event","console","log","target","value","filter","filteredList","item","setState","filteredUsers","axios","get","then","res","data","results","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAgBeA,EAdG,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBACjB,OACI,8BACI,sBAAMC,UAAU,kBAAhB,SACI,uBAAOA,UAAU,eAAeC,YAAY,QACxCC,SACI,SAAAC,GAAC,OAAIJ,EAAmBI,WCKjCC,EAVA,SAAC,GAA4B,IAA1BL,EAAyB,EAAzBA,mBACd,OACI,8BACI,8BACI,cAAC,EAAD,CAAWA,mBAAoBA,S,iBC2BhCM,EAhCD,SAACC,GACX,OACI,8BACI,wBAAON,UAAU,QAAjB,UACI,uBAAOA,UAAU,cAAjB,SACI,+BACI,oBAAIO,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,gCAGR,gCACKD,EAAME,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACb,+BACI,oBAAIJ,MAAM,MAAV,SAAiBI,EAAI,IACrB,6BAAKD,EAAKE,SAASC,QACnB,6BAAKH,EAAKI,KAAKC,QACf,6BAAKL,EAAKI,KAAKE,OACf,6BAAKN,EAAKO,QACV,6BAAKP,EAAKQ,UANLP,cCuBlBQ,G,kNAjCXN,MAAQ,CACJL,MAAO,I,EASXT,mBAAqB,SAAAqB,GACjBC,QAAQC,IAAIF,EAAMG,OAAOC,OACzB,IAAMC,EAASL,EAAMG,OAAOC,MACtBE,EAAe,EAAKb,MAAML,MAAMiB,QAAO,SAAAE,GAGzC,OADAN,QAAQC,IAAIK,GACLA,EAAKb,KAAKC,QAAUU,KAE/B,EAAKG,SAAS,CAAEC,cAAeH,K,kEAfd,IAAD,OCPbI,IAAMC,IAAI,gDDQFC,MAAK,SAACC,GACbZ,QAAQC,IAAIW,EAAIC,KAAKC,SACrB,EAAKP,SAAS,CAAEpB,MAAOyB,EAAIC,KAAKC,e,+BAkBpC,OACI,qCACI,cAAC,EAAD,CAAQpC,mBAAoBqC,KAAKrC,qBACjC,cAAC,EAAD,CAAOS,MAAO4B,KAAKvB,MAAML,e,GA7BtB6B,cEKJC,MARf,WACE,OACE,qBAAKtC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8f6f67a9.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchBar = ({ handleSearchChange }) => {\n    return (\n        <div>\n            <form className=\"m-3 text-center\">\n                <input className=\"shadow col-6\" placeholder=\"Enter\"\n                    onChange={\n                        e => handleSearchChange(e)\n                    }\n                />\n            </form>\n        </div>\n    );\n};\n\nexport default SearchBar;","import React from 'react';\nimport SearchBar from './SearchBar'\n\nconst NavBar = ({ handleSearchChange }) => {\n    return (\n        <nav>\n            <div>\n                <SearchBar handleSearchChange={handleSearchChange} />\n            </div>\n        </nav>\n    );\n};\n\nexport default NavBar;","import React from 'react';\n\nconst Table = (props) => {\n    return (\n        <div>\n            <table className=\"table\">\n                <thead className=\"thead-light\">\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Location</th>\n                        <th scope=\"col\">First</th>\n                        <th scope=\"col\">Last</th>\n                        <th scope=\"col\">Phone</th>\n                        <th scope=\"col\">Email Address</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.users.map((user, i) => (\n                        <tr key={i}>\n                            <th scope=\"row\">{i + 1}</th>\n                            <td>{user.location.state}</td>\n                            <td>{user.name.first}</td>\n                            <td>{user.name.last}</td>\n                            <td>{user.phone}</td>\n                            <td>{user.email}</td>\n                        </tr>\n                    ))}\n\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default Table;","import React, { Component } from 'react';\nimport NavBar from './NavBar'\nimport { getUsers } from '../utils/API'\nimport Table from './Table'\nimport { isDOMComponentElement } from 'react-dom/test-utils';\n\nclass Main extends Component {\n\n    state = {\n        users: []\n    }\n    componentDidMount() {\n        getUsers().then((res) => {\n            console.log(res.data.results)\n            this.setState({ users: res.data.results })\n        })\n    }\n\n    handleSearchChange = event => {\n        console.log(event.target.value);\n        const filter = event.target.value;\n        const filteredList = this.state.users.filter(item => {\n            // Logic to filter users by state\n            console.log(item)\n            return item.name.first === filter;\n        });\n        this.setState({ filteredUsers: filteredList });\n    }\n\n\n\n    render() {\n        return (\n            <>\n                <NavBar handleSearchChange={this.handleSearchChange} />\n                <Table users={this.state.users} />\n            </>\n        );\n    }\n}\n\nexport default Main;","import axios from \"axios\";\n\n// get users function\nexport const getUsers = () => {\n    return axios.get(\"https://randomuser.me/api/?results=50&nat=us\")\n};\n","import React from 'react'\nimport Main from './Components/Main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}